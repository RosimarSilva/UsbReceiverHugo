/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_common.h"
#include "fsl_lpuart.h"
#include "fsl_clock.h"
#include "fsl_tpm.h"
#include "fsl_adc16.h"
#include "fsl_gpio.h"
#include "fsl_port.h"
#include "fsl_rtc.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* Definition of peripheral ID */
#define LPUART0_PERIPHERAL LPUART0
/* Definition of the clock source frequency */
#define LPUART0_CLOCK_SOURCE 2000000UL
/* LPUART0 interrupt vector ID (number). */
#define LPUART0_SERIAL_RX_TX_IRQN LPUART0_IRQn
/* LPUART0 interrupt handler identifier. */
#define LPUART0_SERIAL_RX_TX_IRQHANDLER LPUART0_IRQHandler
/* Definition of peripheral ID */
#define TPM0_PERIPHERAL TPM0
/* Definition of the clock source frequency */
#define TPM0_CLOCK_SOURCE 2000000UL
/* TPM0 interrupt vector ID (number). */
#define TPM0_IRQN TPM0_IRQn
/* TPM0 interrupt vector priority. */
#define TPM0_IRQ_PRIORITY 3
/* TPM0 interrupt handler identifier. */
#define timerInterrupt TPM0_IRQHandler
/* Alias for ADC0 peripheral */
#define ADC0_PERIPHERAL ADC0
/* ADC0 interrupt vector ID (number). */
#define ADC0_IRQN ADC0_IRQn
/* ADC0 interrupt vector priority. */
#define ADC0_IRQ_PRIORITY 5
/* ADC0 interrupt handler identifier. */
#define adcInterrupt ADC0_IRQHandler
/* Channel 0 (DP.3) conversion control group. */
#define ADC0_CH0_CONTROL_GROUP 0
/* Alias for GPIOC peripheral */
#define GPIOC_GPIO GPIOC
/* Alias for PORTC */
#define GPIOC_PORT PORTC
/* GPIOC interrupt vector ID (number). */
#define GPIOC_IRQN PORTB_PORTC_PORTD_PORTE_IRQn
/* GPIOC interrupt handler identifier. */
#define GPIOC_IRQHANDLER PORTB_PORTC_PORTD_PORTE_IRQHandler
/* Definition of peripheral ID */
#define RTC_PERIPHERAL RTC
/* RTC interrupt vector ID (number). */
#define RTC_COMMON_IRQN RTC_IRQn
/* RTC interrupt handler identifier. */
#define RTC_COMMON_IRQHANDLER RTC_IRQHandler

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const lpuart_config_t LPUART0_config;
extern const tpm_config_t TPM0_config;
extern adc16_channel_config_t ADC0_channelsConfig[1];
extern const adc16_config_t ADC0_config;
extern const adc16_channel_mux_mode_t ADC0_muxMode;
extern const adc16_hardware_average_mode_t ADC0_hardwareAverageMode;
/* RTC configuration */
extern const rtc_config_t RTC_config;
/* Date and time structure */
extern rtc_datetime_t RTC_dateTimeStruct;

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/

void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
